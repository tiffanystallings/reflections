When would you want to use a remote repository rather than keeping all your work local?

	If I plan to collaborate on a project with others, ask for feedback, or even if I wanted to be able to work on my project from multiple computers. It would also be good to have a backup online in case of a fatal computer malfunction resulting in the destruction of my HDD.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

	If I'm working on a project, I may have more updated files on my computer than are on GitHub. Having Git pull changes from GitHub automatically would be annoying and redundant.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

	Forks are a copy made of a repository through GitHub that credits the original author of the repository and become entirely seperate. Clones occur either from GitHub, or locally through Git and become a working copy of a repository. Like forking, these changes do not impact the original repository. However, there is also no direct credit given to the original author. Branches are made from a specific commit in a repository, and reflect the changes in that repository made apart from changes to the master branch. Unlike cloning or forking, these changes do impact the repository and can be pulled back into the master branch and combined.

What is the benefit of having a copy of the last known state of the remote stored locally?

	In the event that your computer goes offline for any reason, you have enough information to go on to continue making meaningful changes until internet access can be established again.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	It's theoretically possible to collaborate without either, but not having GitHub would be much harder. It's possible to collaborate without Git and use only GitHub for version control, but pushing and pulling files would be more difficult.