What happens when you initialize a repository? Why do you need to do it?

	An empty git repository is created. This tells git to start up in this directory.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area is information not yet committed, whereas the working directory and repository are already committed. This allows flexibility in making the decision of how much to change in one commit.

How can you use the staging area to make sure you have one commit per logical change?

	If I've made changes to multiple files for different reasons, I can choose to add only one (or however many I need) of those changes before committing.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	Branches would be great for any edits that are highly experimental, or for adding large changes that could result in entirely alternate versions of the code -- like a whole new layout for a website, or an alternate language version of a program.

How do the diagrams help you visualize the branch structure?

	The diagrams make it easier to understand the parent/child relationships of all of the different commits over all of the different branches.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	The code from both of the branches combines into a new master commit, and the id for the non-master branch can be deleted. The diagram shows that the commits from the merged branches still refer to their original parents, while the commit from the merge has two parent commits.